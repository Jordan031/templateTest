{"ast":null,"code":"var _jsxFileName = \"/Users/ZorksGalaxy/template/src/MyS3UploadComponent.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport class MyS3UploadComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = ev => {\n      this.setState({\n        success: false,\n        url: \"\"\n      });\n    };\n\n    this.handleUpload = ev => {\n      let file = this.uploadInput.files[0]; // Split the filename to get the name and type\n\n      let fileParts = this.uploadInput.files[0].name.split('.');\n      let fileName = fileParts[0];\n      let fileType = fileParts[1];\n      console.log(\"Preparing the upload\");\n      axios.post(\"http://localhost:3000/sign_s3\", {\n        fileName: fileName,\n        fileType: fileType\n      }).then(response => {\n        var returnData = response.data.data.returnData;\n        var signedRequest = returnData.signedRequest;\n        var url = returnData.url;\n        this.setState({\n          url: url\n        });\n        console.log(\"Recieved a signed request \" + signedRequest); // Put the fileType in the headers for the upload\n\n        var options = {\n          headers: {\n            'Content-Type': fileType\n          }\n        };\n        axios.put(signedRequest, file, options).then(result => {\n          console.log(\"Response from s3\");\n          this.setState({\n            success: true\n          });\n        }).catch(error => {\n          alert(\"ERROR \" + JSON.stringify(error));\n        });\n      }).catch(error => {\n        alert(JSON.stringify(error));\n      });\n    };\n\n    this.state = {\n      success: false,\n      url: \"\"\n    };\n  }\n\n  render() {\n    const SuccessMessage = () => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: 'green'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"SUCCESSFUL UPLOAD\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: this.state.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Access the file here\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }));\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"UPLOAD A FILE\"), this.state.success ? /*#__PURE__*/React.createElement(SuccessMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange,\n      ref: ref => {\n        this.uploadInput = ref;\n      },\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"UPLOAD\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/ZorksGalaxy/template/src/MyS3UploadComponent.jsx"],"names":["React","Component","axios","MyS3UploadComponent","constructor","props","handleChange","ev","setState","success","url","handleUpload","file","uploadInput","files","fileParts","name","split","fileName","fileType","console","log","post","then","response","returnData","data","signedRequest","options","headers","put","result","catch","error","alert","JSON","stringify","state","render","SuccessMessage","padding","color","ref"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nexport class MyS3UploadComponent extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      success : false,\n      url : \"\"\n    }\n  }\n  \n  handleChange = (ev) => {\n    this.setState({success: false, url : \"\"});\n    \n  }\n  // Perform the upload\n  handleUpload = (ev) => {\n    let file = this.uploadInput.files[0];\n    // Split the filename to get the name and type\n    let fileParts = this.uploadInput.files[0].name.split('.');\n    let fileName = fileParts[0];\n    let fileType = fileParts[1];\n    console.log(\"Preparing the upload\");\n    axios.post(\"http://localhost:3000/sign_s3\",{\n      fileName : fileName,\n      fileType : fileType\n    })\n    .then(response => {\n      var returnData = response.data.data.returnData;\n      var signedRequest = returnData.signedRequest;\n      var url = returnData.url;\n      this.setState({url: url})\n      console.log(\"Recieved a signed request \" + signedRequest);\n      \n     // Put the fileType in the headers for the upload\n      var options = {\n        headers: {\n          'Content-Type': fileType\n        }\n      };\n      axios.put(signedRequest,file,options)\n      .then(result => {\n        console.log(\"Response from s3\")\n        this.setState({success: true});\n      })\n      .catch(error => {\n        alert(\"ERROR \" + JSON.stringify(error));\n      })\n    })\n    .catch(error => {\n      alert(JSON.stringify(error));\n    })\n  }\n  \n  \n  render() {\n    const SuccessMessage = () => (\n      <div style={{padding:50}}>\n        <h3 style={{color: 'green'}}>SUCCESSFUL UPLOAD</h3>\n        <a href={this.state.url}>Access the file here</a>\n        <br/>\n      </div>\n    )\n    return (\n      <div className=\"App\">\n        <center>\n          <h1>UPLOAD A FILE</h1>\n          {this.state.success ? <SuccessMessage/> : null}\n          <input onChange={this.handleChange} ref={(ref) => { this.uploadInput = ref; }} type=\"file\"/>\n          <br/>\n          <button onClick={this.handleUpload}>UPLOAD</button>\n        </center>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}